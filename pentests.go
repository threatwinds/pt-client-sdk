package twpt_client_sdk

import (
	"context"
	"fmt"
)

func (c *Client) ListPentests(ctx context.Context, pagination PaginationParams) (*PentestListResponse, error) {
	return nil, fmt.Errorf("not implemented")
}

func (c *Client) GetPentest(ctx context.Context, pentestID string) (*Pentest, error) {
	return nil, fmt.Errorf("not implemented")
}

func (c *Client) ScheduleFullPentest(ctx context.Context, targets []string) (string, error) {
	return "", fmt.Errorf("not implemented")
}

func (c *Client) ScheduleRecon(ctx context.Context, targets []string) (string, error) {
	return "", fmt.Errorf("not implemented")
}

func (c *Client) ScheduleExploit(ctx context.Context, targets []string) (string, error) {
	return "", fmt.Errorf("not implemented")
}

func (c *Client) SubscribePentest(ctx context.Context, pentestID string) (*PentestSubscription, error) {

	updates := make(chan Pentest)
	messages := make(chan string)
	errors := make(chan error)

	// Close channels immediately since not implemented
	close(updates)
	close(messages)
	close(errors)

	return &PentestSubscription{
		Updates:  updates,
		Messages: messages,
		Errors:   errors,
	}, fmt.Errorf("not implemented")
}

func (c *Client) DownloadReport(ctx context.Context, pentestID string, format ReportFormat, outputDir string) error {
	return fmt.Errorf("not implemented")
}
